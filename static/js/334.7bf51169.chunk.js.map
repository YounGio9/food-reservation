{"version":3,"file":"static/js/334.7bf51169.chunk.js","mappings":"wKAwBA,EArBgB,WAGb,OACGA,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACZF,EAAAA,EAAAA,KAAA,OAAKG,GAAG,UAAUC,UAAU,mCAAkCF,UAC3DG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SANtB,6BAQNG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeF,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,mBAMlB,C,2BCpBMM,E,QAASC,EAAAA,OAAa,CACzBC,QAAS,8BAGZ,K,qPC4KA,UA1KA,WACG,IAAAC,EAAwBR,EAAAA,SAAiC,IAAGS,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAArDG,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA8Bb,EAAAA,UAAwB,GAAMc,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAa,SAACC,GACjB,IAAMC,EAAQD,EAAKE,MAAM,EAAG,GAG5B,OAFYF,EAAKE,MAAM,EAAG,IAGvB,IAAK,KACF,MAAM,GAANC,OAAUF,EAAK,IAAI,IACtB,IAAK,KACF,MAAM,GAANE,QAAWF,EAAQ,EAAC,OACvB,QACG,OAAOD,EAEhB,EAEAI,QAAQC,IAAIN,EAAW,UACvB,IAAMO,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAlB,EAAA,OAAAgB,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,OAAhBjB,GAAW,GAAKe,EAAAE,KAAA,EACG5B,EAAAA,EAAAA,IAAW,iBAAgB,OAAxCM,EAAIoB,EAAAG,KACVZ,QAAQC,IAAIZ,EAAKA,KAAKA,MAEtBC,EACGD,EAAKA,KAAKA,KAAKwB,KACZ,SAACC,EAAUC,GAAW,MAAsB,CACzCC,SAAUD,EACVE,MAAOH,EAAI/B,OAAS,KAAO+B,EAAII,eAC/BrB,MAAO,IAAIsB,KACRL,EAAIM,gBAAgBC,MAAM,KAAKC,UAAUC,KAAK,KAC3C,IACAT,EAAIU,iBAEVC,IAAK,IAAIN,KACN,GAAApB,QAAA2B,EAAAA,EAAAA,GACMZ,EAAIM,gBAAgBC,MAAM,KAAKC,WAAS,CAC3C3B,EAAWmB,EAAIU,mBAChBD,KAAK,MAEZ,KAIP7B,GAAW,GAAM,wBAAAe,EAAAkB,OAAA,GAAApB,EAAA,KACnB,kBA1BoB,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,KAsCrB,OAVAnD,EAAAA,SAAc,WACXsB,QAAQC,IAAIZ,EACf,GAAG,CAACA,IAEJX,EAAAA,WAAgB,WACbwB,GAGH,GAAG,IAEIT,GACJhB,EAAAA,EAAAA,KAACqD,EAAAA,EAAO,KAERrD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oCAAmCF,UAC/CF,EAAAA,EAAAA,KAACsD,EAAAA,UAAS,CACPC,UAAU,EACVC,WAAW,EACXC,OAAQ7C,EACR8C,KAAK,OACLC,IAAK,CACFC,UAAW,GACXC,QAAS,GACTC,KAAM,GACNC,aAAc,SAAAC,GAASA,EAANC,OAAwC,IAAhC7C,EAAK4C,EAAL5C,MAAO8C,EAAOF,EAAPE,QAAYC,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAExCC,EAAOlD,EAAMmD,WACbC,EAAUpD,EAAMqD,aAChBC,EAAW,CAAC,GAAI,GAAI,GAAI,IAAIC,SAASL,GACrCM,EAAYF,EAAW,CAAC,EAAIP,EAClC,OACGnE,EAAAA,EAAAA,KAAC6E,EAAAA,GAAMC,EAAAA,EAAAA,GAAA,CACJC,MAAO,CACJd,OAAQ,OACRe,WACGN,GAAsB,KAATJ,GAA2B,KAAZE,EACvB,OACA,cACRS,OAAQP,EAAW,cAAgB,WAEtCR,QAAS,WACN,GAAIQ,EACD,OAAOQ,MAAM,6CAEhBhB,GACH,EACAiB,cAAeT,GACXE,GAGb,GAEHQ,KAAM,CACHC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GACvBvB,KAAM,GACNwB,YAAa,EACb1B,UAAW,GACXC,QAAS,GACTE,aAAc,SAAAwB,GAASA,EAANtB,OAAwC,IAAhC7C,EAAKmE,EAALnE,MAAO8C,EAAOqB,EAAPrB,QAAYC,GAAKC,EAAAA,EAAAA,GAAAmB,EAAAC,GAExClB,EAAOlD,EAAMmD,WACbC,EAAUpD,EAAMqD,aAChBC,EAAW,CAAC,GAAI,GAAI,GAAI,IAAIC,SAASL,GACrCM,EAAYF,EAAW,CAAC,EAAIP,EAClC,OACGnE,EAAAA,EAAAA,KAAC6E,EAAAA,GAAMC,EAAAA,EAAAA,GAAA,CACJC,MAAO,CACJd,OAAQ,OACRe,WACGN,GAAsB,KAATJ,GAA2B,KAAZE,EACvB,OACA,cACRS,OAAQP,EAAW,cAAgB,WAEtCR,QAAS,WACN,GAAIQ,EACD,OAAOQ,MAAM,6CAEhBhB,GACH,EACAiB,cAAeT,GACXE,GAGb,GAEHa,MAAO,CACJJ,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1BC,YAAa,EACb1B,UAAW,GACXC,QAAS,GACTE,aAAc,SAAA2B,GAASA,EAANzB,OAAwC,IAAhC7C,EAAKsE,EAALtE,MAAO8C,EAAOwB,EAAPxB,QAAYC,GAAKC,EAAAA,EAAAA,GAAAsB,EAAAC,GAExCrB,EAAOlD,EAAMmD,WACbC,EAAUpD,EAAMqD,aAChBC,EAAW,CAAC,GAAI,GAAI,GAAI,IAAIC,SAASL,GACrCM,EAAYF,EAAW,CAAC,EAAIP,EAClC,OACGnE,EAAAA,EAAAA,KAAC6E,EAAAA,GAAMC,EAAAA,EAAAA,GAAA,CACJC,MAAO,CACJd,OAAQ,OACRe,WACGN,GAAsB,KAATJ,GAA2B,KAAZE,EACvB,OACA,cACRS,OAAQP,EAAW,cAAgB,WAEtCR,QAAS,WACN,GAAIQ,EACD,OAAOQ,MAAM,6CAEhBhB,GACH,EACAiB,cAAeT,GACXE,GAGb,MAKf,C","sources":["components/UI/Loading.tsx","helpers/client.tsx","pages/admin/Reservations.tsx"],"sourcesContent":["import React from 'react'\nimport './UI.scss'\n\nconst Loading = () => {\n   const Secondary = 'Chargement en cours ...'\n\n   return (\n      <React.Fragment>\n         <div id='Loading' className='flex justify-center items-center'>\n            <div className='text-center'>\n               <div className='font-normal'>{Secondary}</div>\n\n               <div className='lds-ring mt-8'>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n               </div>\n            </div>\n         </div>\n      </React.Fragment>\n   )\n}\n\nexport default Loading\n","import axios from 'axios'\n\nconst client = axios.create({\n   baseURL: 'http://127.0.0.1:8000/api',\n})\n\nexport default client\n","import { Button } from '@mui/material'\nimport React from 'react'\nimport Loading from '../../components/UI/Loading'\nimport { types } from '../../helpers'\nimport client from '../../helpers/client'\nimport { Scheduler } from '@aldabil/react-scheduler'\nimport { ProcessedEvent } from '@aldabil/react-scheduler/types'\n\nfunction Reservations() {\n   const [data, setData] = React.useState<ProcessedEvent[]>([])\n   const [loading, setLoading] = React.useState<boolean>(false)\n\n   const getEndTime = (time: types.Schedule): string => {\n      const start = time.slice(0, 2)\n      const end = time.slice(3, 5)\n\n      switch (end) {\n         case '00':\n            return `${start}:${30}`\n         case '30':\n            return `${+start + 1}:00`\n         default:\n            return time\n      }\n   }\n\n   console.log(getEndTime('14:00'))\n   const getReservations = async () => {\n      setLoading(true)\n      const data = await client.get('/reservations')\n      console.log(data.data.data)\n\n      setData(\n         data.data.data.map(\n            (res: any, idx: number): ProcessedEvent => ({\n               event_id: idx,\n               title: res.client + '\\n' + res.numberOfGuests,\n               start: new Date(\n                  res.reservationDate.split('/').reverse().join(' ') +\n                     ' ' +\n                     res.reservationTime,\n               ),\n               end: new Date(\n                  [\n                     ...res.reservationDate.split('/').reverse(),\n                     getEndTime(res.reservationTime),\n                  ].join(' '),\n               ),\n            }),\n         ),\n      )\n\n      setLoading(false)\n   }\n\n   React.useMemo(() => {\n      console.log(data)\n   }, [data])\n\n   React.useEffect(() => {\n      getReservations()\n\n      // eslint-disable-next-line\n   }, [])\n\n   return loading ? (\n      <Loading />\n   ) : (\n      <div className='text-black h-full overflow-scroll'>\n         <Scheduler\n            editable={false}\n            deletable={false}\n            events={data}\n            view='week'\n            day={{\n               startHour: 11,\n               endHour: 23,\n               step: 60,\n               cellRenderer: ({ height, start, onClick, ...props }) => {\n                  // Fake some condition up\n                  const hour = start.getHours()\n                  const minutes = start.getMinutes()\n                  const disabled = [15, 16, 17, 18].includes(hour)\n                  const restProps = disabled ? {} : props\n                  return (\n                     <Button\n                        style={{\n                           height: '100%',\n                           background:\n                              disabled || (hour === 14 && minutes === 30)\n                                 ? '#eee'\n                                 : 'transparent',\n                           cursor: disabled ? 'not-allowed' : 'pointer',\n                        }}\n                        onClick={() => {\n                           if (disabled) {\n                              return alert('Feeling Food est fermé de 14h à 19h')\n                           }\n                           onClick()\n                        }}\n                        disableRipple={disabled}\n                        {...restProps}\n                     ></Button>\n                  )\n               },\n            }}\n            week={{\n               weekDays: [0, 3, 4, 5, 6],\n               step: 30,\n               weekStartOn: 6,\n               startHour: 11,\n               endHour: 23,\n               cellRenderer: ({ height, start, onClick, ...props }) => {\n                  // Fake some condition up\n                  const hour = start.getHours()\n                  const minutes = start.getMinutes()\n                  const disabled = [15, 16, 17, 18].includes(hour)\n                  const restProps = disabled ? {} : props\n                  return (\n                     <Button\n                        style={{\n                           height: '100%',\n                           background:\n                              disabled || (hour === 14 && minutes === 30)\n                                 ? '#eee'\n                                 : 'transparent',\n                           cursor: disabled ? 'not-allowed' : 'pointer',\n                        }}\n                        onClick={() => {\n                           if (disabled) {\n                              return alert('Feeling Food est fermé de 14h à 19h')\n                           }\n                           onClick()\n                        }}\n                        disableRipple={disabled}\n                        {...restProps}\n                     ></Button>\n                  )\n               },\n            }}\n            month={{\n               weekDays: [0, 2, 3, 4, 5, 6],\n               weekStartOn: 6,\n               startHour: 11,\n               endHour: 23,\n               cellRenderer: ({ height, start, onClick, ...props }) => {\n                  // Fake some condition up\n                  const hour = start.getHours()\n                  const minutes = start.getMinutes()\n                  const disabled = [15, 16, 17, 18].includes(hour)\n                  const restProps = disabled ? {} : props\n                  return (\n                     <Button\n                        style={{\n                           height: '100%',\n                           background:\n                              disabled || (hour === 14 && minutes === 30)\n                                 ? '#eee'\n                                 : 'transparent',\n                           cursor: disabled ? 'not-allowed' : 'pointer',\n                        }}\n                        onClick={() => {\n                           if (disabled) {\n                              return alert('Feeling Food est fermé de 14h à 19h')\n                           }\n                           onClick()\n                        }}\n                        disableRipple={disabled}\n                        {...restProps}\n                     ></Button>\n                  )\n               },\n            }}\n         />\n      </div>\n   )\n}\n\nexport default Reservations\n"],"names":["_jsx","React","children","id","className","_jsxs","client","axios","baseURL","_React$useState","_React$useState2","_slicedToArray","data","setData","_React$useState3","_React$useState4","loading","setLoading","getEndTime","time","start","slice","concat","console","log","getReservations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","map","res","idx","event_id","title","numberOfGuests","Date","reservationDate","split","reverse","join","reservationTime","end","_toConsumableArray","stop","apply","arguments","Loading","Scheduler","editable","deletable","events","view","day","startHour","endHour","step","cellRenderer","_ref2","height","onClick","props","_objectWithoutProperties","_excluded","hour","getHours","minutes","getMinutes","disabled","includes","restProps","Button","_objectSpread","style","background","cursor","alert","disableRipple","week","weekDays","weekStartOn","_ref3","_excluded2","month","_ref4","_excluded3"],"sourceRoot":""}