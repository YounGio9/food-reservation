{"version":3,"file":"static/js/264.05918408.chunk.js","mappings":"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","sources":["helpers/types.tsx","contexts/StepperContext.tsx","components/forms/Buttons/BackButton.tsx","components/forms/steps/Day.tsx","components/forms/steps/Guests.tsx","components/forms/steps/Time.tsx","components/forms/Buttons/NextButton.tsx","components/forms/steps/Preferences.tsx","components/forms/Form.tsx","components/forms/index.tsx"],"sourcesContent":["export interface Stepper {\n    activeStep: number\n    handleNext: (data: Reservation) => void\n    handleBack: () => void\n    addFormData: (data: Reservation) => void\n    globalData: Reservation\n    choosenDateInString: string | null\n    setDate: (date: Date) => void\n    setHour: (time: Schedule) => void\n}\n\nexport type contextChildren =\n    | string\n    | number\n    | boolean\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n    | React.ReactFragment\n    | React.ReactPortal\n\nexport interface Step {\n    label: string\n    element: () => React.JSX.Element\n}\n\nexport interface Reservation {\n    adultsGuests: number\n    childrenGuests: number\n    reservationDate: string\n    reservationTime: string\n    typeOfMeal: string\n    options?: string[]\n    comment?: string\n    firstname: string\n    lastname: string\n    email: string\n    phoneNumber: number\n    country: string\n}\n\nexport type Schedule =\n    | '12:00'\n    | '12:30'\n    | '13:00'\n    | '13:30'\n    | '14:00'\n    | '19:00'\n    | '19:30'\n    | '20:00'\n    | '20:30'\n    | '21:00'\n    | '21:30'\n    | '22:00'\n\nexport enum Days {\n    'Mardi' = 2,\n    'Mercredi',\n    'Jeudi',\n    'Vendredi',\n    'Samedi',\n}\n\nexport enum Months {\n    'Janvier' = 0,\n    'Février',\n    'Mars',\n    'Avril',\n    'Mai',\n    'Juin',\n    'Août',\n    'Septembre',\n    'Octobre',\n    'Novembre',\n    'Décembre',\n}\n","import React, { createContext, useMemo, useState } from 'react'\nimport { types } from '../helpers'\n\nconst StepperContext = createContext({} as types.Stepper)\n\nfunction StepperProvider(props: {\n    children: types.contextChildren\n    numberOfSteps: number\n}) {\n    const [activeStep, setActiveStep] = useState<number>(0)\n\n    const [globalData, setGlobalData] = useState<types.Reservation>(\n        {} as types.Reservation,\n    )\n    const [choosenDateInString, setChoosenDateInString] = useState<\n        string | null\n    >(null)\n\n    const addFormData = (data: Partial<types.Reservation>) => {\n        if (activeStep < props.numberOfSteps) {\n            setGlobalData((prev) => ({\n                ...prev,\n                ...data,\n            }))\n        }\n    }\n\n    useMemo(() => {\n        console.log(globalData)\n    }, [globalData])\n\n    const handleNext = (data: types.Reservation) => {\n        console.log('submit')\n        addFormData(data)\n        setActiveStep((prev) => prev + 1)\n    }\n\n    const handleBack = () => {\n        setActiveStep((prev) => (prev > 0 ? prev - 1 : prev))\n    }\n\n    const setDate = (date: Date) => {\n        console.log('choosen Date', date)\n        setChoosenDateInString(\n            [\n                types.Days[date.getDay()].toLocaleLowerCase(),\n                date.getDate(),\n                types.Months[date.getMonth()].toLocaleLowerCase(),\n                date.getFullYear(),\n            ].join(' '),\n        )\n\n        handleNext({\n            reservationDate: date.toLocaleDateString('en-GB'),\n        } as types.Reservation)\n    }\n\n    const setHour = (hour: types.Schedule) => {\n        console.log('chossen time', hour)\n\n        setChoosenDateInString((prev) => `${prev}  ${hour}`)\n\n        handleNext({\n            reservationTime: hour,\n        } as types.Reservation)\n    }\n\n    return (\n        <StepperContext.Provider\n            value={{\n                activeStep,\n                addFormData,\n                handleBack,\n                handleNext,\n                globalData,\n                setDate,\n                setHour,\n                choosenDateInString,\n            }}\n        >\n            {props.children}\n        </StepperContext.Provider>\n    )\n}\n\nexport const useStepper = () => React.useContext(StepperContext)\n\nexport default StepperProvider\n","import React from 'react'\nimport { useStepper } from '../../../contexts/StepperContext'\nimport { types } from '../../../helpers'\nimport { BiArrowBack } from 'react-icons/bi'\n\ninterface Props {\n    label: string | React.ReactElement\n}\n\nfunction BackButton(props: Props) {\n    const { handleBack }: types.Stepper = useStepper()\n\n    const { label } = props\n\n    return (\n        <div className='flex justify-between p-6'>\n            <button\n                onClick={handleBack}\n                className='button disabled:border-grey disabled:bg-transparent disabled:text-grey select-none transition-colors border-2 py-2 px-2 relative rounded-full font-semibold text-xs text-right border-black hover:bg-black hover:text-white text-black '\n            >\n                <span className='h-fit flex justify-center items-center'>\n                    <BiArrowBack fontSize={20} /> {label}\n                </span>\n            </button>\n        </div>\n    )\n}\n\nexport default BackButton\n","import React, { useEffect } from 'react'\nimport 'react-calendar/dist/Calendar.css'\nimport Calendar from 'react-calendar'\nimport { useStepper } from '../../../contexts/StepperContext'\nimport BackButton from '../Buttons/BackButton'\n\nfunction DayStep() {\n    const { setDate, globalData } = useStepper()\n    const [activeDate, setActiveDate] = React.useState<Date>()\n\n    useEffect(() => {\n        setActiveDate(\n            new Date(globalData.reservationDate).toString() === 'Invalid Date'\n                ? new Date()\n                : new Date(globalData.reservationDate),\n        )\n        // eslint-disable-next-line\n    }, [])\n\n    console.log('activeDate', activeDate)\n\n    return (\n        <div>\n            <Calendar\n                value={activeDate}\n                tileClassName={({ date }) =>\n                    ![0, 1].includes(date.getDay()) && date >= new Date()\n                        ? 'available'\n                        : ''\n                }\n                onClickDay={(date) => setDate(date)}\n                minDate={new Date()}\n                tileDisabled={({ date }) => [0, 1].includes(date.getDay())}\n            />\n            <BackButton label={'Modifier les convives'} />\n        </div>\n    )\n}\n\nexport default DayStep\n","import React from 'react'\nimport { useStepper } from '../../../contexts/StepperContext'\nimport { types } from '../../../helpers'\n\nfunction Guests() {\n    const [adults, setAdults] = React.useState<number>(0)\n    const [children, setChildren] = React.useState<number>(0)\n\n    const props = useStepper()\n\n    const totalGuests: number = adults + children\n\n    type guests = 'adults' | 'children'\n\n    const increment = (guest: guests) => {\n        const action = (prev: number) =>\n            prev <= 15 && totalGuests <= 15 ? prev + 1 : prev\n        if (guest === 'adults') {\n            setAdults(action)\n        }\n        if (guest === 'children') {\n            setChildren(action)\n        }\n    }\n\n    const decrement = (guest: guests) => {\n        const action = (prev: number) => (prev >= 1 ? prev - 1 : prev)\n        if (guest === 'adults') {\n            setAdults(action)\n        }\n        if (guest === 'children') {\n            setChildren(action)\n        }\n    }\n\n    return (\n        <div className='grid'>\n            <div className='flex p-6 items-center justify-between'>\n                <p>Adultes</p>{' '}\n                <div className='flex items-center justify-between basis-[45%]'>\n                    <button\n                        onClick={() => decrement('adults')}\n                        className={`flex items-center justify-center w-10 h-10 ${\n                            adults > 0 ? 'border-red' : 'border-grey'\n                        }   border-2 rounded-full`}\n                    >\n                        -\n                    </button>\n                    {adults}\n                    <button\n                        onClick={() => increment('adults')}\n                        className={`flex items-center justify-center w-10 h-10 ${\n                            adults <= 15 && totalGuests <= 15\n                                ? 'border-red'\n                                : 'border-grey'\n                        }   border-2 rounded-full`}\n                    >\n                        +\n                    </button>\n                </div>\n            </div>\n            <hr className='min-w-full border border-grey' />\n            <div className='flex p-6 items-center justify-between'>\n                <p>Enfants</p>{' '}\n                <div className='flex items-center justify-between basis-[45%]'>\n                    <button\n                        onClick={() => decrement('children')}\n                        className={`flex items-center justify-center w-10 h-10 ${\n                            children > 0 ? 'border-red' : 'border-grey'\n                        }   border-2 rounded-full`}\n                    >\n                        -\n                    </button>\n                    {children}\n                    <button\n                        onClick={() => increment('children')}\n                        className={`flex items-center justify-center w-10 h-10 ${\n                            children <= 15 && totalGuests <= 15\n                                ? 'border-red'\n                                : 'border-grey'\n                        }   border-2 rounded-full`}\n                    >\n                        +\n                    </button>\n                </div>\n            </div>\n            {totalGuests === 16 && (\n                <p className='text-xs px-4 py-6 text-white bg-blue text-left'>\n                    Pour toute réservation de plus de 16, contactez directement\n                    le restaurant.\n                </p>\n            )}\n            <div className='flex p-6 items-center justify-end'>\n                <button\n                    disabled={totalGuests <= 0}\n                    onClick={() =>\n                        props.handleNext({\n                            adultsGuests: adults,\n                            childrenGuests: children,\n                        } as types.Reservation)\n                    }\n                    className={`border-2 transition duration-500  ${\n                        totalGuests === 0\n                            ? 'border-grey text-grey'\n                            : 'border-black'\n                    }  p-2 text-xs rounded-full`}\n                >\n                    {totalGuests === 0\n                        ? \"Nombre d'invites\"\n                        : totalGuests === 1\n                        ? 'Juste moi'\n                        : `Nous serons ${totalGuests}`}\n                    !\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Guests\n","import React from 'react'\nimport { useStepper } from '../../../contexts/StepperContext'\nimport { types } from '../../../helpers'\nimport BackButton from '../Buttons/BackButton'\n\nfunction Time() {\n    const { choosenDateInString, setHour } = useStepper()\n\n    const hours: types.Schedule[] = [\n        '12:00',\n        '12:30',\n        '13:00',\n        '13:30',\n        '14:00',\n        '19:00',\n        '19:30',\n        '20:00',\n        '20:30',\n        '21:00',\n        '21:30',\n        '22:00',\n    ]\n\n    return (\n        <div>\n            <h2 className='relative text-white pb-6 font-bold text-center bg-[rgb(220,0,68)] pt-4 z-10 select-none'>\n                {choosenDateInString}\n            </h2>\n            <div className='flex items-center justify-center'>\n                <div className='flex flex-wrap w-[85%] mt-6'>\n                    {hours.map((hour) => (\n                        <button\n                            onClick={() => setHour(hour)}\n                            key={hour}\n                            className='mx-auto mb-2 text-center text-xs font-bold rounded-full w-20 py-2 available'\n                        >\n                            {hour}\n                        </button>\n                    ))}\n                </div>\n            </div>\n\n            <BackButton label=' Modifier la date' />\n        </div>\n    )\n}\n\nexport default Time\n","import React from 'react'\nimport { useStepper } from '../../../contexts/StepperContext'\nimport { types } from '../../../helpers'\nimport { IoArrowForwardOutline } from 'react-icons/io5'\n\ninterface Props {\n    label: string | React.ReactElement\n    datas: types.Reservation\n}\n\nfunction NextButton(props: Props) {\n    const { handleNext }: types.Stepper = useStepper()\n\n    const { label, datas } = props\n\n    return (\n        <div className='flex justify-between p-6'>\n            <button\n                onClick={() => handleNext(datas)}\n                className='button disabled:border-grey disabled:bg-transparent disabled:text-grey select-none transition-colors border-2 py-2 px-2 relative rounded-full font-semibold text-xs text-right border-black hover:bg-black hover:text-white text-black'\n            >\n                <span className='h-fit flex justify-center items-center'>\n                    {label} <IoArrowForwardOutline fontSize={20} />\n                </span>\n            </button>\n        </div>\n    )\n}\n\nexport default NextButton\n","import React from 'react'\nimport { types } from '../../../helpers'\nimport BackButton from '../Buttons/BackButton'\nimport NextButton from '../Buttons/NextButton'\n\nfunction Preferences() {\n    const mealTypes: string[] = [\n        'Moment détente',\n        'Repas professionnel',\n        'Repas rapide',\n        'Anniversaire',\n        'Evenement particulier',\n        'Autre',\n    ]\n\n    const options: string[] = ['Chaise bébé', 'Mobilité réduite', 'Poussette']\n\n    const [selectedMeal, setSelectedMeal] =\n        React.useState<string>('Moment détente')\n\n    const [selectedOptions, setSelectedOptions] = React.useState<string[]>(\n        [] as string[],\n    )\n\n    const isRadioSelected = (value: string): boolean => value === selectedMeal\n\n    const handleClick = (e: React.ChangeEvent<HTMLInputElement>) =>\n        setSelectedMeal(e.target.value)\n\n    const [comment, setComment] = React.useState<string>('')\n\n    const handleCheck = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value\n\n        if (selectedOptions.includes(value))\n            return setSelectedOptions((prev) =>\n                prev.filter((option) => option !== value),\n            )\n\n        setSelectedOptions((prev) => [\n            ...Array.from(new Set<string>([...prev, value])),\n        ])\n    }\n\n    const handleComment = (e: React.ChangeEvent<HTMLTextAreaElement>) =>\n        setComment(e.target.value)\n\n    React.useMemo(() => {\n        console.log(selectedMeal)\n        console.log(selectedOptions)\n        console.log(comment)\n    }, [selectedMeal, selectedOptions, comment])\n\n    return (\n        <div>\n            <div className='pl-6 pt-6 w-full pr-2'>\n                <h2 className='text-sm font-bold select-none'>\n                    Types de repas\n                </h2>\n                <div className='text-sm mt-4 mb-6 flex flex-col'>\n                    {mealTypes.map((mealType) => (\n                        <label\n                            key={mealType}\n                            className='flex mb-4 pl-6 py-2 pr-4 rounded-full text-xs items-center justify-between flex-row-reverse'\n                        >\n                            <input\n                                type='radio'\n                                name='option'\n                                value={mealType}\n                                checked={isRadioSelected(mealType)}\n                                onChange={handleClick}\n                            />\n                            <span className='select-none font-normal'>\n                                {' '}\n                                {mealType}\n                            </span>\n                        </label>\n                    ))}\n                </div>\n            </div>\n\n            <hr className='border border-barestho-light-gray min-w-full ' />\n\n            <div className='pl-6 pt-6 w-full pr-2'>\n                <h2 className='text-sm font-bold select-none'>Options</h2>\n                <div className='text-sm mt-4 mb-6 flex flex-col'>\n                    {options.map((option) => (\n                        <label\n                            key={option}\n                            className='flex mb-4 pl-6 py-2 pr-4 rounded-full text-xs items-center justify-between flex-row-reverse'\n                        >\n                            <input\n                                type='checkbox'\n                                name='event'\n                                value={option}\n                                onChange={handleCheck}\n                            />\n                            <span className='select-none font-normal'>\n                                {' '}\n                                {option}\n                            </span>\n                        </label>\n                    ))}\n                </div>\n            </div>\n\n            <hr className='border border-barestho-light-gray min-w-full ' />\n\n            <div className='pl-6 pt-6 w-full pr-2 mb-6'>\n                <h2 className='text-sm font-bold select-none'>Commentaire</h2>\n\n                <div className='flex flex-col flex-nowrap'></div>\n\n                <textarea\n                    name='comment'\n                    value={comment}\n                    onChange={handleComment}\n                    id='comment'\n                    className='placeholder:text-xs placeholder:text-gray p-2 text-sm border-t border-x border-b-2 border-b-red focus:outline-blue rounded-t mt-4'\n                    maxLength={255}\n                    placeholder='Quelque chose à ajouter ?'\n                ></textarea>\n\n                <span className='text-slate-300 text-xs text-right mt-1'>\n                    {}{' '}\n                </span>\n            </div>\n\n            <div className='flex justify-between'>\n                <BackButton label='' />\n\n                {!!selectedMeal && (\n                    <NextButton\n                        datas={\n                            {\n                                options: selectedOptions,\n                                typeOfMeal: selectedMeal,\n                                comment,\n                            } as types.Reservation\n                        }\n                        label='Passer à la suite'\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Preferences\n","import React, { useEffect } from 'react'\nimport { useStepper } from '../../contexts/StepperContext'\nimport { types } from '../../helpers'\nimport { DayStep, Time, Guests, Preferences } from './steps'\n\nfunction Form() {\n    const Steps: types.Step[] = [\n        {\n            label: 'Les invités',\n            element: Guests,\n        },\n        {\n            label: 'Le créneau souhaité',\n            element: DayStep,\n        },\n        {\n            label: 'Le créneau souhaité',\n            element: Time,\n        },\n        {\n            label: 'Vos préférences',\n            element: Preferences,\n        },\n    ]\n\n    const { activeStep }: types.Stepper = useStepper()\n\n    useEffect(() => {\n        console.log(activeStep)\n    }, [activeStep])\n\n    const ActiveElement = Steps[activeStep].element\n    const activeElementLabel = Steps[activeStep].label\n\n    return (\n        <div className='w-full h-auto bg-white font-bold rounded-3xl mb-20'>\n            <div className='font-bold text-xl border-b-2 w-full py-4 text-center'>\n                {activeElementLabel}\n            </div>\n            <div>\n                <ActiveElement />\n            </div>\n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport StepperProvider from '../../contexts/StepperContext'\nimport Form from './Form'\n\nfunction index() {\n    return (\n        <StepperProvider numberOfSteps={5}>\n            <Form />\n        </StepperProvider>\n    )\n}\n\nexport default index\n"],"names":["Days","Months","StepperContext","createContext","useStepper","React","props","_useState","useState","_useState2","_slicedToArray","activeStep","setActiveStep","_useState3","_useState4","globalData","setGlobalData","_useState5","_useState6","choosenDateInString","setChoosenDateInString","addFormData","data","numberOfSteps","prev","_objectSpread","useMemo","console","log","handleNext","_jsx","Provider","value","handleBack","setDate","date","types","getDay","toLocaleLowerCase","getDate","getMonth","getFullYear","join","reservationDate","toLocaleDateString","setHour","hour","concat","reservationTime","children","label","className","onClick","_jsxs","BiArrowBack","fontSize","_useStepper","_React$useState","_React$useState2","activeDate","setActiveDate","useEffect","Date","toString","Calendar","tileClassName","_ref","includes","onClickDay","minDate","tileDisabled","_ref2","BackButton","adults","setAdults","_React$useState3","_React$useState4","setChildren","totalGuests","increment","guest","action","decrement","disabled","adultsGuests","childrenGuests","map","datas","IoArrowForwardOutline","selectedMeal","setSelectedMeal","selectedOptions","setSelectedOptions","handleClick","e","target","_React$useState5","_React$useState6","comment","setComment","handleCheck","filter","option","_toConsumableArray","Array","from","Set","mealType","type","name","checked","onChange","id","maxLength","placeholder","NextButton","options","typeOfMeal","Steps","element","Guests","DayStep","Time","Preferences","ActiveElement","activeElementLabel","StepperProvider","Form"],"sourceRoot":""}